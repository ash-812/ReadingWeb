openapi: 3.0.0
info:
  title: 微信读书网页版 API
  description: 微信读书网页版完整接口文档
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
    description: 开发环境

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        nickname:
          type: string
        avatar:
          type: string
        bio:
          type: string
        isMember:
          type: boolean
        coins:
          type: integer
        totalReadingTime:
          type: integer
    Book:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        author:
          type: string
        cover:
          type: string
        description:
          type: string
        category:
          type: string
        price:
          type: integer
        isFree:
          type: boolean
        rating:
          type: number
          format: float
        readCount:
          type: integer
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        details:
          type: string
  responses:
    Error:
      description: 错误响应
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string
              details:
                type: string

paths:
  # ==================== 认证相关接口 ====================
  /auth/phone-login:
    post:
      summary: 手机号登录
      tags: [认证]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                code:
                  type: string
              required: [phone, code]
      responses:
        200:
          description: 登录成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        400:
          $ref: '#/components/responses/Error'

  /auth/email-login:
    post:
      summary: 邮箱密码登录
      tags: [认证]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required: [email, password]
      responses:
        200:
          description: 登录成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'

  /auth/send-code:
    post:
      summary: 发送验证码
      tags: [认证]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone:
                  type: string
                type:
                  type: string
                  enum: [login, register, reset]
              required: [phone, type]
      responses:
        200:
          description: 发送成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /auth/register:
    post:
      summary: 用户注册
      tags: [认证]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                phone:
                  type: string
                email:
                  type: string
                nickname:
                  type: string
              required: [username, password, nickname]
      responses:
        201:
          description: 注册成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'

  /auth/logout:
    post:
      summary: 退出登录
      tags: [认证]
      security:
        - bearerAuth: []
      responses:
        200:
          description: 退出成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  # ==================== 个人中心接口 ====================
  /user/profile:
    get:
      summary: 获取个人资料
      tags: [个人中心]
      security:
        - bearerAuth: []
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: 更新个人资料
      tags: [个人中心]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nickname:
                  type: string
                avatar:
                  type: string
                bio:
                  type: string
      responses:
        200:
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /user/reading-stats:
    get:
      summary: 获取阅读统计
      tags: [个人中心]
      security:
        - bearerAuth: []
      parameters:
        - name: range
          in: query
          schema:
            type: string
            enum: [week, month, year]
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalReadingTime:
                    type: integer
                  weeklyReadingTime:
                    type: integer
                  monthlyReadingTime:
                    type: integer
                  readingDays:
                    type: integer

  /user/messages:
    get:
      summary: 获取消息列表
      tags: [个人中心]
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        type:
                          type: string
                        title:
                          type: string
                        content:
                          type: string
                        isRead:
                          type: boolean
                        createdAt:
                          type: string
                          format: date-time
                  total:
                    type: integer

  /user/messages/unread-count:
    get:
      summary: 获取未读消息数量
      tags: [个人中心]
      security:
        - bearerAuth: []
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  unreadCount:
                    type: integer

  /user/messages/{id}/read:
    put:
      summary: 标记消息已读
      tags: [个人中心]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /user/account:
    get:
      summary: 获取账户信息
      tags: [个人中心]
      security:
        - bearerAuth: []
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  isMember:
                    type: boolean
                  coins:
                    type: integer
                  memberExpireAt:
                    type: string
                    format: date-time

  # ==================== 书城首页接口 ====================
  /home:
    get:
      summary: 首页数据
      tags: [书城]
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  banners:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        image:
                          type: string
                        link:
                          type: string
                  recommendations:
                    type: array
                    items:
                      $ref: '#/components/schemas/Book'
                  rankings:
                    type: object
                    properties:
                      weekly:
                        type: array
                        items:
                          $ref: '#/components/schemas/Book'
                      monthly:
                        type: array
                        items:
                          $ref: '#/components/schemas/Book'

  /books/search:
    get:
      summary: 搜索书籍
      tags: [书城]
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
        - name: category
          in: query
          schema:
            type: string
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  books:
                    type: array
                    items:
                      $ref: '#/components/schemas/Book'
                  total:
                    type: integer
                  page:
                    type: integer

  /books/recommendations:
    get:
      summary: 为你推荐
      tags: [书城]
      parameters:
        - name: refresh
          in: query
          schema:
            type: boolean
            default: false
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  books:
                    type: array
                    items:
                      $ref: '#/components/schemas/Book'

  /books/rankings:
    get:
      summary: 书籍榜单
      tags: [书城]
      parameters:
        - name: type
          in: query
          required: true
          schema:
            type: string
            enum: [weekly, monthly, new, bestseller]
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  books:
                    type: array
                    items:
                      $ref: '#/components/schemas/Book'
                  title:
                    type: string
                  updateTime:
                    type: string
                    format: date-time

  # ==================== 书籍详情接口 ====================
  /books/{id}:
    get:
      summary: 获取书籍详情
      tags: [书籍详情]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  book:
                    $ref: '#/components/schemas/Book'
                  chapters:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        order:
                          type: integer
                  isInBookshelf:
                    type: boolean
                  readingProgress:
                    type: object
                    properties:
                      progress:
                        type: number
                        format: float
                      lastReadAt:
                        type: string
                        format: date-time

  /books/{id}/author:
    get:
      summary: 获取作者信息
      tags: [书籍详情]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  author:
                    type: object
                    properties:
                      name:
                        type: string
                      bio:
                        type: string
                      achievement:
                        type: string

  /authors/{name}/books:
    get:
      summary: 获取作者的其他作品
      tags: [书籍详情]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  books:
                    type: array
                    items:
                      $ref: '#/components/schemas/Book'

  /books/{id}/comments:
    get:
      summary: 获取书友评论
      tags: [书籍详情]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  comments:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        user:
                          $ref: '#/components/schemas/User'
                        content:
                          type: string
                        rating:
                          type: number
                          format: float
                        createdAt:
                          type: string
                          format: date-time
                  total:
                    type: integer

  /books/{id}/related:
    get:
      summary: 相关推荐
      tags: [书籍详情]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  books:
                    type: array
                    items:
                      $ref: '#/components/schemas/Book'

  # ==================== 阅读器接口 ====================
  /books/{bookId}/chapters/{chapterId}:
    get:
      summary: 获取章节内容
      tags: [阅读器]
      security:
        - bearerAuth: []
      parameters:
        - name: bookId
          in: path
          required: true
          schema:
            type: integer
        - name: chapterId
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  chapter:
                    type: object
                    properties:
                      id:
                        type: integer
                      title:
                        type: string
                      content:
                        type: string
                      order:
                        type: integer
                  prevChapter:
                    type: object
                    properties:
                      id:
                        type: integer
                      title:
                        type: string
                  nextChapter:
                    type: object
                    properties:
                      id:
                        type: integer
                      title:
                        type: string

  /reading/progress:
    post:
      summary: 保存阅读进度
      tags: [阅读器]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bookId:
                  type: integer
                chapterId:
                  type: integer
                currentPage:
                  type: integer
                progress:
                  type: number
                  format: float
              required: [bookId, progress]
      responses:
        200:
          description: 保存成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /reading/progress/{bookId}:
    get:
      summary: 获取阅读进度
      tags: [阅读器]
      security:
        - bearerAuth: []
      parameters:
        - name: bookId
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  progress:
                    type: object
                    properties:
                      bookId:
                        type: integer
                      chapterId:
                        type: integer
                      currentPage:
                        type: integer
                      progress:
                        type: number
                        format: float
                      lastReadAt:
                        type: string
                        format: date-time

  /reading/notes:
    post:
      summary: 添加标注/笔记
      tags: [阅读器]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bookId:
                  type: integer
                chapterId:
                  type: integer
                content:
                  type: string
                type:
                  type: string
                  enum: [highlight, comment]
                color:
                  type: string
                page:
                  type: integer
              required: [bookId, content, type]
      responses:
        201:
          description: 添加成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  note:
                    type: object
    get:
      summary: 获取笔记列表
      tags: [阅读器]
      security:
        - bearerAuth: []
      parameters:
        - name: bookId
          in: query
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  notes:
                    type: array
                    items:
                      type: object

  /reading/bookmarks:
    post:
      summary: 添加书签
      tags: [阅读器]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bookId:
                  type: integer
                chapterId:
                  type: integer
                page:
                  type: integer
                note:
                  type: string
              required: [bookId, page]
      responses:
        201:
          description: 添加成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    get:
      summary: 获取书签列表
      tags: [阅读器]
      security:
        - bearerAuth: []
      parameters:
        - name: bookId
          in: query
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  bookmarks:
                    type: array
                    items:
                      type: object

  # ==================== 书架接口 ====================
  /bookshelf:
    get:
      summary: 获取书架
      tags: [书架]
      security:
        - bearerAuth: []
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [all, unread, reading, finished]
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  books:
                    type: array
                    items:
                      type: object
                      properties:
                        book:
                          $ref: '#/components/schemas/Book'
                        status:
                          type: string
                        addedAt:
                          type: string
                          format: date-time
                        lastReadAt:
                          type: string
                          format: date-time
                        progress:
                          type: number
                          format: float
    post:
      summary: 添加到书架
      tags: [书架]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bookId:
                  type: integer
                status:
                  type: string
                  enum: [unread, reading, finished]
              required: [bookId]
      responses:
        201:
          description: 添加成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /bookshelf/{bookId}:
    delete:
      summary: 从书架移除
      tags: [书架]
      security:
        - bearerAuth: []
      parameters:
        - name: bookId
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 移除成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    put:
      summary: 更新阅读状态
      tags: [书架]
      security:
        - bearerAuth: []
      parameters:
        - name: bookId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [unread, reading, finished]
                lastReadAt:
                  type: string
                  format: date-time
      responses:
        200:
          description: 更新成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /bookshelf/batch:
    post:
      summary: 批量操作
      tags: [书架]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  enum: [delete, update-status]
                bookIds:
                  type: array
                  items:
                    type: integer
                status:
                  type: string
              required: [action, bookIds]
      responses:
        200:
          description: 操作成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  # ==================== 分类接口 ====================
  /categories:
    get:
      summary: 分类列表
      tags: [分类]
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  categories:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        bookCount:
                          type: integer

  /categories/{id}/books:
    get:
      summary: 分类下的书籍
      tags: [分类]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  books:
                    type: array
                    items:
                      $ref: '#/components/schemas/Book'
                  total:
                    type: integer

  # ==================== 社区接口 ====================
  /posts:
    post:
      summary: 发帖
      tags: [社区]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
                bookId:
                  type: integer
                topic:
                  type: string
              required: [title, content]
      responses:
        201:
          description: 发帖成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  post:
                    type: object
    get:
      summary: 帖子列表
      tags: [社区]
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
        - name: type
          in: query
          schema:
            type: string
            enum: [all, following, mine]
        - name: topic
          in: query
          schema:
            type: string
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  posts:
                    type: array
                    items:
                      type: object
                  total:
                    type: integer

  /posts/{id}:
    get:
      summary: 帖子详情
      tags: [社区]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  post:
                    type: object

  /likes:
    post:
      summary: 点赞
      tags: [社区]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                postId:
                  type: integer
                commentId:
                  type: integer
                noteId:
                  type: integer
      responses:
        200:
          description: 点赞成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    delete:
      summary: 取消点赞
      tags: [社区]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                postId:
                  type: integer
                commentId:
                  type: integer
                noteId:
                  type: integer
      responses:
        200:
          description: 取消成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /comments:
    post:
      summary: 评论
      tags: [社区]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                postId:
                  type: integer
                noteId:
                  type: integer
                parentId:
                  type: integer
                content:
                  type: string
              required: [content]
      responses:
        201:
          description: 评论成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  comment:
                    type: object

  /follows:
    post:
      summary: 关注用户
      tags: [社区]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                followingId:
                  type: integer
              required: [followingId]
      responses:
        200:
          description: 关注成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /follows/{followingId}:
    delete:
      summary: 取消关注
      tags: [社区]
      security:
        - bearerAuth: []
      parameters:
        - name: followingId
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 取消成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /follows/following:
    get:
      summary: 关注列表
      tags: [社区]
      security:
        - bearerAuth: []
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  following:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'

  /follows/followers:
    get:
      summary: 粉丝列表
      tags: [社区]
      security:
        - bearerAuth: []
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  followers:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'

  /topics:
    get:
      summary: 话题列表
      tags: [社区]
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  topics:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        postCount:
                          type: integer

  /topics/{name}/posts:
    get:
      summary: 话题下的帖子
      tags: [社区]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        200:
          description: 成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  posts:
                    type: array
                    items:
                      type: object
                  total:
                    type: integer

